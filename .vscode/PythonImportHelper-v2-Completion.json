[
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Window",
        "importPath": "kivy.core.window",
        "description": "kivy.core.window",
        "isExtraImport": true,
        "detail": "kivy.core.window",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "kivy.uix.image",
        "description": "kivy.uix.image",
        "isExtraImport": true,
        "detail": "kivy.uix.image",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "kivy.uix.image",
        "description": "kivy.uix.image",
        "isExtraImport": true,
        "detail": "kivy.uix.image",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "kivy.uix.image",
        "description": "kivy.uix.image",
        "isExtraImport": true,
        "detail": "kivy.uix.image",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "ScreenManager",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "Screen",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "ScreenManager",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "Screen",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "ScrollView",
        "importPath": "kivy.uix.scrollview",
        "description": "kivy.uix.scrollview",
        "isExtraImport": true,
        "detail": "kivy.uix.scrollview",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "turtle",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "turtle",
        "description": "turtle",
        "detail": "turtle",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "BoxLayout",
        "importPath": "kivy.uix.boxlayout",
        "description": "kivy.uix.boxlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.boxlayout",
        "documentation": {}
    },
    {
        "label": "WelcomeVie",
        "kind": 6,
        "importPath": "design",
        "description": "design",
        "peekOfCode": "class WelcomeView (GridLayout):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.cols = 1\n        self.size_hint = (0.6 , 0.7)\n        self.pos_hint = {\n            \"center_x\": 0.5,\n            \"center_y\":  0.5\n         }\n        self.add_widget(Image(source = \"./number.Guesser.drawio.png\"))",
        "detail": "design",
        "documentation": {}
    },
    {
        "label": "Stockview",
        "kind": 6,
        "importPath": "design",
        "description": "design",
        "peekOfCode": "class Stockview(GridLayout):\n     def __init__(self,**kwargs):\n         super().__init__(**kwargs)  \n         self.cols = 1\n         self.size_hint = (0.9, 0.9)\n         self.pos_hint ={\n             \"center_x\": 0.5,\n              \"center_y\": 0.5,\n          }\n         \"\"\"",
        "detail": "design",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "design",
        "description": "design",
        "peekOfCode": "class MyApp(App):\n     def build(self):\n         self.screen_manager = ScreenManager()\n         self.welcome_view = WelcomeView()\n         screen = Screen(name = \"welcome_view\")\n         screen.add_widget(self.welcome_view)\n         self.screen_manager.add_widget(screen)\n         self.stock_view = Stockview()\n         screen = Screen(name = \"stockview\")\n         screen .add_widget(self.stock_view)",
        "detail": "design",
        "documentation": {}
    },
    {
        "label": "go_up",
        "kind": 2,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "def go_up():\n    if head.direction != \"down\":\n        head.direction = \"up\"\ndef go_down():\n    if head.direction != \"up\":\n        head.direction = \"down\"\ndef go_left():\n    if head.direction != \"right\":\n        head.direction = \"left\"\ndef go_right():",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "go_down",
        "kind": 2,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "def go_down():\n    if head.direction != \"up\":\n        head.direction = \"down\"\ndef go_left():\n    if head.direction != \"right\":\n        head.direction = \"left\"\ndef go_right():\n    if head.direction != \"left\":\n        head.direction = \"right\"\ndef move():",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "go_left",
        "kind": 2,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "def go_left():\n    if head.direction != \"right\":\n        head.direction = \"left\"\ndef go_right():\n    if head.direction != \"left\":\n        head.direction = \"right\"\ndef move():\n    if head.direction == \"up\":\n        y = head.ycor()\n        head.sety(y + 20)",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "go_right",
        "kind": 2,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "def go_right():\n    if head.direction != \"left\":\n        head.direction = \"right\"\ndef move():\n    if head.direction == \"up\":\n        y = head.ycor()\n        head.sety(y + 20)\n    if head.direction == \"down\":\n        y = head.ycor()\n        head.sety(y - 20)",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "move",
        "kind": 2,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "def move():\n    if head.direction == \"up\":\n        y = head.ycor()\n        head.sety(y + 20)\n    if head.direction == \"down\":\n        y = head.ycor()\n        head.sety(y - 20)\n    if head.direction == \"left\":\n        x = head.xcor()\n        head.setx(x - 20)",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "delay",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "delay = 0.1\n# Score\nscore = 0\nhigh_score = 0\n# Set up the screen\nwn = turtle.Screen()\nwn.title(\"Snake Game by @TokyoEdTech\")\nwn.bgcolor(\"green\")\nwn.setup(width=600, height=600)\nwn.tracer(0) # Turns off the screen updates",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "score",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "score = 0\nhigh_score = 0\n# Set up the screen\nwn = turtle.Screen()\nwn.title(\"Snake Game by @TokyoEdTech\")\nwn.bgcolor(\"green\")\nwn.setup(width=600, height=600)\nwn.tracer(0) # Turns off the screen updates\n# Snake head\nhead = turtle.Turtle()",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "high_score",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "high_score = 0\n# Set up the screen\nwn = turtle.Screen()\nwn.title(\"Snake Game by @TokyoEdTech\")\nwn.bgcolor(\"green\")\nwn.setup(width=600, height=600)\nwn.tracer(0) # Turns off the screen updates\n# Snake head\nhead = turtle.Turtle()\nhead.speed(0)",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "wn",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "wn = turtle.Screen()\nwn.title(\"Snake Game by @TokyoEdTech\")\nwn.bgcolor(\"green\")\nwn.setup(width=600, height=600)\nwn.tracer(0) # Turns off the screen updates\n# Snake head\nhead = turtle.Turtle()\nhead.speed(0)\nhead.shape(\"square\")\nhead.color(\"black\")",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "head",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "head = turtle.Turtle()\nhead.speed(0)\nhead.shape(\"square\")\nhead.color(\"black\")\nhead.penup()\nhead.goto(0,0)\nhead.direction = \"stop\"\n# Snake food\nfood = turtle.Turtle()\nfood.speed(0)",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "head.direction",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "head.direction = \"stop\"\n# Snake food\nfood = turtle.Turtle()\nfood.speed(0)\nfood.shape(\"circle\")\nfood.color(\"red\")\nfood.penup()\nfood.goto(0,100)\nsegments = []\n# Pen",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "food",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "food = turtle.Turtle()\nfood.speed(0)\nfood.shape(\"circle\")\nfood.color(\"red\")\nfood.penup()\nfood.goto(0,100)\nsegments = []\n# Pen\npen = turtle.Turtle()\npen.speed(0)",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "segments",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "segments = []\n# Pen\npen = turtle.Turtle()\npen.speed(0)\npen.shape(\"turtle\")\npen.color(\"white\")\npen.penup()\npen.hideturtle()\npen.goto(0, 260)\npen.write(\"Score: 0  High Score: 0\", align=\"center\", font=(\"Courier\", 24, \"normal\"))",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "pen",
        "kind": 5,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "pen = turtle.Turtle()\npen.speed(0)\npen.shape(\"turtle\")\npen.color(\"white\")\npen.penup()\npen.hideturtle()\npen.goto(0, 260)\npen.write(\"Score: 0  High Score: 0\", align=\"center\", font=(\"Courier\", 24, \"normal\"))\n# Functions\ndef go_up():",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "Game_Window",
        "kind": 6,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "class Game_Window(GridLayout):\n    def __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.cols = 1\n       self.size_hint=(1 , 1)\n       self.pos_hint = {\n        \"center_x\": 0.5,\n        \"center_y\": 0.5,\n       }\n       self.add_widget(Image(source =\"./number.Guesser.drawio.png\"))",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "class MyApp(App):\n    def build(self):\n        self.screen_manager = ScreenManager()\n        self.game_window = Game_Window()\n        screen = Screen(name = \"game_window\")\n        screen.add_widget(self.game_window)\n        self.screen_manager.add_widget(screen)\n        self.screen_manager.current = 'game_window'\n        return self.screen_manager\nself.question = Label(text = \"choose your number range\")",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "move_question",
        "kind": 2,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "def move_question(self, dt):\n            self.question.pos={20 , 20}\nif __name__ == \"__main__\":\n  app =MyApp()\n  app.run()",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "self.question",
        "kind": 5,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "self.question = Label(text = \"choose your number range\")\nself.add_widget(self.question)\nClock.schedule_once(self.move_question, 1 )\ndef move_question(self, dt):\n            self.question.pos={20 , 20}\nif __name__ == \"__main__\":\n  app =MyApp()\n  app.run()",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "hello_world2",
        "description": "hello_world2",
        "peekOfCode": "class MyApp(App):\n    def build(self):\n        layout = BoxLayout(orientation='vertical')\n        # Create a label\n        self.label = Label(text=\"Hello, World!\", font_size=32)\n        layout.add_widget(self.label)\n        # Create a button to move the label\n        button = Button(text=\"Move Label\",\n                        size_hint=(0.1,0.1))\n        button.bind(on_press=self.move_label)",
        "detail": "hello_world2",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "my_game",
        "description": "my_game",
        "peekOfCode": "class MyApp(App):\n    def build():\n        window = GridLayout()\n        window.cols = 1\n        window.add_widget(Image(source= \"./number.Guesser.drawio.png\"))\n        return window\nif __name__ == \"__main__\":\n    app = MyApp()\n    app.run()",
        "detail": "my_game",
        "documentation": {}
    },
    {
        "label": "show_count",
        "kind": 2,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "def show_count(count):\n    print(f'You have needed {count} tries')\ndef show_winning_message(number,count):\n    print(f'concratulation you have found the searched number {number} and needed this {count} amount of tries')\ndef guess_number(number):\n    is_guessing = True\n    count = 0\n    while is_guessing == True:\n        # print(number)\n        # if count > 5:",
        "detail": "nummer_guesser",
        "documentation": {}
    },
    {
        "label": "show_winning_message",
        "kind": 2,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "def show_winning_message(number,count):\n    print(f'concratulation you have found the searched number {number} and needed this {count} amount of tries')\ndef guess_number(number):\n    is_guessing = True\n    count = 0\n    while is_guessing == True:\n        # print(number)\n        # if count > 5:\n        #     is_guessing = False\n        #     print('guess five time')",
        "detail": "nummer_guesser",
        "documentation": {}
    },
    {
        "label": "guess_number",
        "kind": 2,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "def guess_number(number):\n    is_guessing = True\n    count = 0\n    while is_guessing == True:\n        # print(number)\n        # if count > 5:\n        #     is_guessing = False\n        #     print('guess five time')\n        count += 1\n        Guessed_number = int(input(\"guess number: \"))",
        "detail": "nummer_guesser",
        "documentation": {}
    },
    {
        "label": "to_guess_number",
        "kind": 5,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "to_guess_number = random.randint(1, 10)\nguess_number(to_guess_number)",
        "detail": "nummer_guesser",
        "documentation": {}
    }
]