[
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "kivy.app",
        "description": "kivy.app",
        "isExtraImport": true,
        "detail": "kivy.app",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Clock",
        "importPath": "kivy.clock",
        "description": "kivy.clock",
        "isExtraImport": true,
        "detail": "kivy.clock",
        "documentation": {}
    },
    {
        "label": "Window",
        "importPath": "kivy.core.window",
        "description": "kivy.core.window",
        "isExtraImport": true,
        "detail": "kivy.core.window",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "kivy.uix.button",
        "description": "kivy.uix.button",
        "isExtraImport": true,
        "detail": "kivy.uix.button",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "GridLayout",
        "importPath": "kivy.uix.gridlayout",
        "description": "kivy.uix.gridlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.gridlayout",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "kivy.uix.image",
        "description": "kivy.uix.image",
        "isExtraImport": true,
        "detail": "kivy.uix.image",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "kivy.uix.label",
        "description": "kivy.uix.label",
        "isExtraImport": true,
        "detail": "kivy.uix.label",
        "documentation": {}
    },
    {
        "label": "ScreenManager",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "Screen",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "ScreenManager",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "Screen",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "ScreenManager",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "Screen",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "ScreenManager",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "Screen",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "ScreenManager",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "Screen",
        "importPath": "kivy.uix.screenmanager",
        "description": "kivy.uix.screenmanager",
        "isExtraImport": true,
        "detail": "kivy.uix.screenmanager",
        "documentation": {}
    },
    {
        "label": "ScrollView",
        "importPath": "kivy.uix.scrollview",
        "description": "kivy.uix.scrollview",
        "isExtraImport": true,
        "detail": "kivy.uix.scrollview",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "TextInput",
        "importPath": "kivy.uix.textinput",
        "description": "kivy.uix.textinput",
        "isExtraImport": true,
        "detail": "kivy.uix.textinput",
        "documentation": {}
    },
    {
        "label": "FloatLayout",
        "importPath": "kivy.uix.floatlayout",
        "description": "kivy.uix.floatlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.floatlayout",
        "documentation": {}
    },
    {
        "label": "FloatLayout",
        "importPath": "kivy.uix.floatlayout",
        "description": "kivy.uix.floatlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.floatlayout",
        "documentation": {}
    },
    {
        "label": "FloatLayout",
        "importPath": "kivy.uix.floatlayout",
        "description": "kivy.uix.floatlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.floatlayout",
        "documentation": {}
    },
    {
        "label": "FloatLayout",
        "importPath": "kivy.uix.floatlayout",
        "description": "kivy.uix.floatlayout",
        "isExtraImport": true,
        "detail": "kivy.uix.floatlayout",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "Rectangle",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "Rectangle",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "Rectangle",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "Rectangle",
        "importPath": "kivy.graphics",
        "description": "kivy.graphics",
        "isExtraImport": true,
        "detail": "kivy.graphics",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "SoundLoader",
        "importPath": "kivy.core.audio",
        "description": "kivy.core.audio",
        "isExtraImport": true,
        "detail": "kivy.core.audio",
        "documentation": {}
    },
    {
        "label": "SoundLoader",
        "importPath": "kivy.core.audio",
        "description": "kivy.core.audio",
        "isExtraImport": true,
        "detail": "kivy.core.audio",
        "documentation": {}
    },
    {
        "label": "SoundLoader",
        "importPath": "kivy.core.audio",
        "description": "kivy.core.audio",
        "isExtraImport": true,
        "detail": "kivy.core.audio",
        "documentation": {}
    },
    {
        "label": "WelcomeVie",
        "kind": 6,
        "importPath": "design",
        "description": "design",
        "peekOfCode": "class WelcomeView (GridLayout):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.cols = 1\n        self.size_hint = (0.6 , 0.7)\n        self.pos_hint = {\n            \"center_x\": 0.5,\n            \"center_y\":  0.5\n         }\n        self.add_widget(Image(source = \"./number.Guesser.drawio.png\"))",
        "detail": "design",
        "documentation": {}
    },
    {
        "label": "Stockview",
        "kind": 6,
        "importPath": "design",
        "description": "design",
        "peekOfCode": "class Stockview(GridLayout):\n     def __init__(self,**kwargs):\n         super().__init__(**kwargs)  \n         self.cols = 1\n         self.size_hint = (0.9, 0.9)\n         self.pos_hint ={\n             \"center_x\": 0.5,\n              \"center_y\": 0.5,\n          }\n         \"\"\"",
        "detail": "design",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "design",
        "description": "design",
        "peekOfCode": "class MyApp(App):\n     def build(self):\n         self.screen_manager = ScreenManager()\n         self.welcome_view = WelcomeView()\n         screen = Screen(name = \"welcome_view\")\n         screen.add_widget(self.welcome_view)\n         self.screen_manager.add_widget(screen)\n         self.stock_view = Stockview()\n         screen = Screen(name = \"stockview\")\n         screen .add_widget(self.stock_view)",
        "detail": "design",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "class MyApp(App):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.brightness_state = (1, 1, 1, 1)  # Default to full brightness\n    def build(self):\n        self.screen_manager = ScreenManager()\n        # Add your screens\n        game_window = Game_Window()\n        game_screen = Screen(name=\"game_window\")\n        game_screen.add_widget(game_window)",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "Game_Window",
        "kind": 6,
        "importPath": "Game_window",
        "description": "Game_window",
        "peekOfCode": "class Game_Window(GridLayout):\n    def __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.cols = 1\n       self.size_hint=(1 , 1)\n       self.pos_hint = {\n        \"center_x\": 0.5,\n        \"center_y\": 0.5,\n       }\n        # define white background",
        "detail": "Game_window",
        "documentation": {}
    },
    {
        "label": "Game_Window",
        "kind": 6,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "class Game_Window(FloatLayout):\n    def __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.background_music = SoundLoader.load('./ukulele-8488.mp3')\n       if self.background_music:\n         print(\"Music loaded successfully!\")\n         self.background_music.loop = True  # Optional: Set to loop the music\n         self.background_music.play() \n       self.cols = 1\n       self.size_hint=(1 , 1)",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "Options_Menue",
        "kind": 6,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "class Options_Menue(FloatLayout):\n    def __init__(self, **kwargs):\n        self.cols = 1\n        self.size_hint = (1, 1)\n        self.pos_hint = {\n            \"center_x\": 0.5,\n            \"center_y\": 0.5\n        }\n        self.background_color = (1, 1, 1, 1) \n        self.background_color = App.get_running_app().brightness_state",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "InGame",
        "kind": 6,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "class InGame(FloatLayout):\n    def __init__(self,max_number,**kwargs):\n        self.the_searched_number = random.randint(1, max_number)\n        super().__init__(**kwargs)\n        self.cols = 3\n        self.size_hint = (1, 1)\n        self.background_color = (1, 1, 1, 1) \n        app = App.get_running_app() \n        self.background_color = app.brightness_state \n        with self.canvas.before:",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "hello_world",
        "description": "hello_world",
        "peekOfCode": "class MyApp(App):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.brightness_state = (1, 1, 1, 1)  # Default to full brightness\n    def build(self):\n        self.screen_manager = ScreenManager()\n        # Create and add game window\n        game_window = Game_Window()\n        game_screen = Screen(name=\"game_window\")\n        game_screen.add_widget(game_window)",
        "detail": "hello_world",
        "documentation": {}
    },
    {
        "label": "Game_Window",
        "kind": 6,
        "importPath": "hello_world2",
        "description": "hello_world2",
        "peekOfCode": "class Game_Window(FloatLayout):\n    def __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.background_music = SoundLoader.load('./ukulele-8488.mp3')\n       if self.background_music:\n            self.background_music.loop = True  \n            self.background_music.volume = 0.3  \n            self.background_music.play()  \n       self.cols = 1\n       self.size_hint=(1 , 1)",
        "detail": "hello_world2",
        "documentation": {}
    },
    {
        "label": "Options_Menue",
        "kind": 6,
        "importPath": "hello_world2",
        "description": "hello_world2",
        "peekOfCode": "class Options_Menue(FloatLayout):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.cols = 1\n        self.size_hint = (1, 1)\n        self.pos_hint = {\n            \"center_x\": 0.5,\n            \"center_y\": 0.5\n        }\n        self.background_color = (1, 1, 1, 1) ",
        "detail": "hello_world2",
        "documentation": {}
    },
    {
        "label": "InGame",
        "kind": 6,
        "importPath": "hello_world2",
        "description": "hello_world2",
        "peekOfCode": "class InGame(FloatLayout):\n    def __init__(self,max_number,**kwargs):\n        self.the_searched_number = random.randint(1, max_number)\n        self.count = 1\n        super().__init__(**kwargs)\n        self.cols = 3\n        self.size_hint = (1, 1)\n        self.background_color = (1, 1, 1, 1) \n        app = App.get_running_app() \n        self.background_color = app.brightness_state ",
        "detail": "hello_world2",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "hello_world2",
        "description": "hello_world2",
        "peekOfCode": "class MyApp(App):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.brightness_state = (1, 1, 1, 1)  # Default to full brightness\n    def build(self):\n        self.screen_manager = ScreenManager()\n        # Create and add game window\n        game_window = Game_Window()\n        game_screen = Screen(name=\"game_window\")\n        game_screen.add_widget(game_window)",
        "detail": "hello_world2",
        "documentation": {}
    },
    {
        "label": "Game_Window",
        "kind": 6,
        "importPath": "iiiiii",
        "description": "iiiiii",
        "peekOfCode": "class Game_Window(FloatLayout):\n    def __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.click_sound = SoundLoader.load(\"./click-234708.mp3\")\n       self.cols = 1\n       self.size_hint=(1 , 1)\n       self.pos_hint = {\"center_x\":0.5, \"center_y\":0.5}\n       self.background_color = (1, 1, 1, 1) \n       with self.canvas.before:\n            self.bg_color = Color(*self.background_color)",
        "detail": "iiiiii",
        "documentation": {}
    },
    {
        "label": "Options_Menue",
        "kind": 6,
        "importPath": "iiiiii",
        "description": "iiiiii",
        "peekOfCode": "class Options_Menue(FloatLayout):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.click_sound = SoundLoader.load('./click-234708.mp3')\n        self.cols = 1\n        self.size_hint = (1, 1)\n        self.pos_hint = {\n            \"center_x\": 0.5,\n            \"center_y\": 0.5\n        }",
        "detail": "iiiiii",
        "documentation": {}
    },
    {
        "label": "InGame",
        "kind": 6,
        "importPath": "iiiiii",
        "description": "iiiiii",
        "peekOfCode": "class InGame(FloatLayout):\n    def __init__(self,max_number,**kwargs):\n        self.the_searched_number = random.randint(1, max_number)\n        self.click_sound = SoundLoader.load('./click-234708.mp3')\n        self.count = 1\n        super().__init__(**kwargs)\n        self.cols = 3\n        self.size_hint = (1, 1)\n        self.background_color = (1, 1, 1, 1) \n        app = App.get_running_app() ",
        "detail": "iiiiii",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "iiiiii",
        "description": "iiiiii",
        "peekOfCode": "class MyApp(App):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.brightness_state = (1, 1, 1, 1)  # Default to full brightness\n    def build(self):\n        self.screen_manager = ScreenManager()\n        # Create and add game window\n        game_window = Game_Window()\n        game_screen = Screen(name=\"game_window\")\n        game_screen.add_widget(game_window)",
        "detail": "iiiiii",
        "documentation": {}
    },
    {
        "label": "InGame",
        "kind": 6,
        "importPath": "InGame",
        "description": "InGame",
        "peekOfCode": "class InGame(FloatLayout):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.cols = 3\n        self.size_hint = (1, 1)\n        app = App.get_running_app()  # Get the current app instance\n        self.background_color = app.brightness_state  # Use the current brightness state\n        with self.canvas.before:\n            self.bg_color = Color(*self.background_color)  # Set initial color based on brightness_state\n            self.rect = Rectangle(size=self.size, pos=self.pos)",
        "detail": "InGame",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "MyApp",
        "description": "MyApp",
        "peekOfCode": "class MyApp(App):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        # Define the initial brightness state\n        self.brightness_state = (1, 1, 1, 1)  # Full brightness (white)\n    def build(self):\n        self.screen_manager = ScreenManager()\n        self.game_window = Game_Window()  # Create Game_Window object\n        screen = Screen(name=\"game_window\")\n        screen.add_widget(self.game_window)",
        "detail": "MyApp",
        "documentation": {}
    },
    {
        "label": "Game_Window",
        "kind": 6,
        "importPath": "my_game",
        "description": "my_game",
        "peekOfCode": "class Game_Window(GridLayout):\n    def __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.cols = 1\n       self.size_hint=(0.8 , 0.8)\n       self.pos_hint = {\n        \"center_x\": 0.5,\n        \"center_y\": 0.5,\n       }\n       self.background_Color= (1,1,1,1)",
        "detail": "my_game",
        "documentation": {}
    },
    {
        "label": "InGame",
        "kind": 6,
        "importPath": "my_game",
        "description": "my_game",
        "peekOfCode": "class InGame(FloatLayout):\n   def  __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.cols=3\n       self.size_hint=(1 , 1)\n       self.guess_number=TextInput(\n          multiline=False,\n          padding_y=(30),\n          font_size=(20),\n          size_hint=(0.27 , 0.15),",
        "detail": "my_game",
        "documentation": {}
    },
    {
        "label": "Options_Menu",
        "kind": 6,
        "importPath": "my_game",
        "description": "my_game",
        "peekOfCode": "class Options_Menue (GridLayout):\n   def  __init__(self, **kwargs):\n       super().__init__(**kwargs)\n       self.cols = 1\n       self.size_hint = (0.8 , 0.8)\n       self.pos_hint = {\n          \"center_x\": 0.5,\n          \"center_y\": 0.5\n       }\n    #    self.background_Color=(1 , 1 , 1 , 1)",
        "detail": "my_game",
        "documentation": {}
    },
    {
        "label": "MyApp",
        "kind": 6,
        "importPath": "my_game",
        "description": "my_game",
        "peekOfCode": "class MyApp(App):\n    def build(self):\n        self.screen_manager = ScreenManager()\n        self.game_window = Game_Window()\n        screen = Screen(name = \"game_window\")\n        screen.add_widget(self.game_window)\n        self.screen_manager.add_widget(screen)\n        self.in_game = InGame()\n        screen = Screen(name = \"InGame\")\n        screen.add_widget(self.in_game)",
        "detail": "my_game",
        "documentation": {}
    },
    {
        "label": "show_count",
        "kind": 2,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "def show_count(count):\n    print(f'You have needed {count} tries')\ndef show_winning_message(number,count):\n    print(f'concratulation you have found the searched number {number} and needed this {count} amount of tries')\ndef guess_number(number):\n    is_guessing = True\n    count = 0\n    while is_guessing == True:\n        count += 1\n        Guessed_number = int(input(\"guess number: \"))",
        "detail": "nummer_guesser",
        "documentation": {}
    },
    {
        "label": "show_winning_message",
        "kind": 2,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "def show_winning_message(number,count):\n    print(f'concratulation you have found the searched number {number} and needed this {count} amount of tries')\ndef guess_number(number):\n    is_guessing = True\n    count = 0\n    while is_guessing == True:\n        count += 1\n        Guessed_number = int(input(\"guess number: \"))\n        if number == Guessed_number or Guessed_number == 0: \n            show_count(count)",
        "detail": "nummer_guesser",
        "documentation": {}
    },
    {
        "label": "guess_number",
        "kind": 2,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "def guess_number(number):\n    is_guessing = True\n    count = 0\n    while is_guessing == True:\n        count += 1\n        Guessed_number = int(input(\"guess number: \"))\n        if number == Guessed_number or Guessed_number == 0: \n            show_count(count)\n            if Guessed_number == 0:\n                print(f'thank you to try to guess the number {number} You have needed {count} tries')",
        "detail": "nummer_guesser",
        "documentation": {}
    },
    {
        "label": "to_guess_number",
        "kind": 5,
        "importPath": "nummer_guesser",
        "description": "nummer_guesser",
        "peekOfCode": "to_guess_number = random.randint(1, 10)",
        "detail": "nummer_guesser",
        "documentation": {}
    },
    {
        "label": "Options_Menue",
        "kind": 6,
        "importPath": "Options_Menue",
        "description": "Options_Menue",
        "peekOfCode": "class Options_Menue(GridLayout):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.cols = 1\n        self.size_hint = (1, 1)\n        self.pos_hint = {\n            \"center_x\": 0.5,\n            \"center_y\": 0.5\n        }\n        self.background_color = App.get_running_app().brightness_state",
        "detail": "Options_Menue",
        "documentation": {}
    }
]